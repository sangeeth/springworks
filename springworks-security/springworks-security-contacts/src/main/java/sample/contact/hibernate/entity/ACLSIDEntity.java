package sample.contact.hibernate.entity;

import java.io.Serializable;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/*
 CREATE TABLE ACL_SID(" +
                    "ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL PRIMARY KEY," +
                    "PRINCIPAL BOOLEAN NOT NULL," +
                    "SID VARCHAR_IGNORECASE(100) NOT NULL," +
                    "CONSTRAINT UNIQUE_UK_1 UNIQUE(SID,PRINCIPAL));
 */
@Entity
@Table(name="acl_sid", 
        uniqueConstraints={@UniqueConstraint(name="UNIQUE_CONSTRAINT",
                                             columnNames={"sid", "principal"})})
public class ACLSIDEntity implements Serializable {
    private static final long serialVersionUID = 1L;

    private Long id;
    
    private boolean principal;
    
    private String sid;
    
    private List<ACLEntryEntity> entries;
    
    private List<ACLObjectIdentityEntity> objects;

    public ACLSIDEntity() {
        super();
    }

    @Column(name="id")
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name="principal", nullable=false)
    public boolean isPrincipal() {
        return principal;
    }

    public void setPrincipal(boolean principal) {
        this.principal = principal;
    }

    @Column(name="sid", nullable=false, length=100)
    public String getSid() {
        return sid;
    }

    public void setSid(String sid) {
        this.sid = sid;
    }

    @OneToMany(mappedBy="sid", fetch=FetchType.LAZY, cascade=CascadeType.ALL)
    public List<ACLEntryEntity> getEntries() {
        return entries;
    }

    public void setEntries(List<ACLEntryEntity> entries) {
        this.entries = entries;
    }

    @OneToMany(mappedBy="owner", fetch=FetchType.LAZY, cascade=CascadeType.ALL)
    public List<ACLObjectIdentityEntity> getObjects() {
        return objects;
    }

    public void setObjects(List<ACLObjectIdentityEntity> objects) {
        this.objects = objects;
    }
}
