package sample.contact.hibernate.entity;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/*
CREATE TABLE ACL_OBJECT_IDENTITY(" +
        "ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 100) NOT NULL PRIMARY KEY," +
        "OBJECT_ID_CLASS BIGINT NOT NULL," +
        "OBJECT_ID_IDENTITY BIGINT NOT NULL," +
        "PARENT_OBJECT BIGINT," +
        "OWNER_SID BIGINT," +
        "ENTRIES_INHERITING BOOLEAN NOT NULL," +
        "CONSTRAINT UNIQUE_UK_3 UNIQUE(OBJECT_ID_CLASS,OBJECT_ID_IDENTITY)," +
        "CONSTRAINT FOREIGN_FK_1 FOREIGN KEY(PARENT_OBJECT)REFERENCES ACL_OBJECT_IDENTITY(ID)," +
        "CONSTRAINT FOREIGN_FK_2 FOREIGN KEY(OBJECT_ID_CLASS)REFERENCES ACL_CLASS(ID)," +
        "CONSTRAINT FOREIGN_FK_3 FOREIGN KEY(OWNER_SID)REFERENCES ACL_SID(ID));");
 */
@Entity
@Table(name="acl_object_identity", 
        uniqueConstraints={@UniqueConstraint(name="UNIQUE_CONSTRAINT",
                                             columnNames={"object_id_class", "object_id_identity"})})
public class ACLObjectIdentityEntity {
    private Long id;
    
    private ACLClassEntity type;
    
    private Long identity;
    
    private ACLObjectIdentityEntity parent;
       
    private ACLSIDEntity owner;
    
    private boolean entriesInheriting;
    
    private List<ACLEntryEntity> entries;

    public ACLObjectIdentityEntity() {
        super();
    }

    @Column(name="ID")
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne
    @JoinColumn(name="object_id_class")
    public ACLClassEntity getType() {
        return type;
    }

    public void setType(ACLClassEntity type) {
        this.type = type;
    }

    @Column(name="object_id_identity", nullable=false)
    public Long getIdentity() {
        return identity;
    }

    public void setIdentity(Long identity) {
        this.identity = identity;
    }

    @ManyToOne(optional=true)
    @JoinColumn(name="parent_object")
    public ACLObjectIdentityEntity getParent() {
        return parent;
    }
    
    public void setParent(ACLObjectIdentityEntity parent) {
        this.parent = parent;
    }
    
/*    @OneToMany(fetch=FetchType.LAZY)
    public List<ACLObjectIdentityEntity> getChildren() {
        return this.children;
    }
    
    public void setChildren(List<ACLObjectIdentityEntity> children) {
        this.children = children;
    }*/

    @ManyToOne(optional=true)
    @JoinColumn(name="owner_sid")
    public ACLSIDEntity getOwner() {
        return owner;
    }

    public void setOwner(ACLSIDEntity owner) {
        this.owner = owner;
    }

    @Column(name="entries_inheriting")
    public boolean isEntriesInheriting() {
        return entriesInheriting;
    }

    public void setEntriesInheriting(boolean entriesInheriting) {
        this.entriesInheriting = entriesInheriting;
    }

    @OneToMany(fetch=FetchType.LAZY,mappedBy="identity")
    public List<ACLEntryEntity> getEntries() {
        return entries;
    }

    public void setEntries(List<ACLEntryEntity> entries) {
        this.entries = entries;
    }
}
